function [Kl Ml]= KM_local(X,Y,Z,C,rho,intPt)

% WRITTEN BY TOMMASO LANDI AND CHRISTOPHE HOAREAU


    %=====================================================================%
    %                      Begin function
    %----------------------------------------------------------------------
    % Output
    % Kl : Local Stiffness matrix
    % Ml : Local Mass matrix
    % ---------------------------------------------------------------------
    % Input
    % X    : X coordinates elem.
    % Y    : Y coordinates elem.
    % Z    : Z coordinates elem.
    % C    : material moduli
    % rho  : mass density
    % intPt: Point integration structure
    %----------------------------------------------------------------------

    ir = intPt.ir;    
    wp = intPt.wp;
    N  = intPt.N ;
    dNeta = intPt.dNeta ;
    dNnu  = intPt.dNnu  ;
    dNte  = intPt.dNte  ;
    
    %--- Init Kl and Ml --------------------------------------------------% 

    Kl = zeros(60,60);
    Ml = zeros(60,60);

    %=====================================================================%
    %                    Loop over the Gauss Points
    %=====================================================================%

for i=1:ir
    
    %----------------------------------------------------------------------
    % Jacobian of the deformation gradient
    %----------------------------------------------------------------------

    F(1,1)=dNeta(i,:)*X; F(1,2)=dNnu(i,:)*X; F(1,3)=dNte(i,:)*X;
    F(2,1)=dNeta(i,:)*Y; F(2,2)=dNnu(i,:)*Y; F(2,3)=dNte(i,:)*Y;
    F(3,1)=dNeta(i,:)*Z; F(3,2)=dNnu(i,:)*Z; F(3,3)=dNte(i,:)*Z;
    detF=det(F);

    if detF<10*eps
        disp('Jacobian determinant equal or less than zero!')
    end

    %----------------------------------------------------------------------
    % Derivatives of the shape functions
    %----------------------------------------------------------------------
    
    DD = [dNeta(i,:); dNnu(i,:); dNte(i,:)]';
    DN = DD/F;
    
    %----------------------------------------------------------------------
    % Discrete gradient operator and shape function matrix
    %----------------------------------------------------------------------
    
    B=[DN(1,1) 0 0         DN(2,1) 0 0         DN(3,1) 0 0         DN(4,1) 0 0         DN(5,1) 0 0         DN(6,1) 0 0         DN(7,1) 0 0         DN(8,1) 0 0         DN(9,1) 0 0         DN(10,1) 0 0          DN(11,1) 0 0          DN(12,1) 0 0          DN(13,1) 0 0          DN(14,1) 0 0          DN(15,1) 0 0          DN(16,1) 0 0          DN(17,1) 0 0          DN(18,1) 0 0          DN(19,1) 0 0          DN(20,1) 0 0;
       0 DN(1,2) 0         0 DN(2,2) 0         0 DN(3,2) 0         0 DN(4,2) 0         0 DN(5,2) 0         0 DN(6,2) 0         0 DN(7,2) 0         0 DN(8,2) 0         0 DN(9,2) 0         0 DN(10,2) 0          0 DN(11,2) 0          0 DN(12,2) 0          0 DN(13,2) 0          0 DN(14,2) 0          0 DN(15,2) 0          0 DN(16,2) 0          0 DN(17,2) 0          0 DN(18,2) 0          0 DN(19,2) 0          0 DN(20,2) 0;
       0 0 DN(1,3)         0 0 DN(2,3)         0 0 DN(3,3)         0 0 DN(4,3)         0 0 DN(5,3)         0 0 DN(6,3)         0 0 DN(7,3)         0 0 DN(8,3)         0 0 DN(9,3)         0 0 DN(10,3)          0 0 DN(11,3)          0 0 DN(12,3)          0 0 DN(13,3)          0 0 DN(14,3)          0 0 DN(15,3)          0 0 DN(16,3)          0 0 DN(17,3)          0 0 DN(18,3)          0 0 DN(19,3)          0 0 DN(20,3);
       DN(1,2) DN(1,1) 0   DN(2,2) DN(2,1) 0   DN(3,2) DN(3,1) 0   DN(4,2) DN(4,1) 0   DN(5,2) DN(5,1) 0   DN(6,2) DN(6,1) 0   DN(7,2) DN(7,1) 0   DN(8,2) DN(8,1) 0   DN(9,2) DN(9,1) 0   DN(10,2) DN(10,1) 0   DN(11,2) DN(11,1) 0   DN(12,2) DN(12,1) 0   DN(13,2) DN(13,1) 0   DN(14,2) DN(14,1) 0   DN(15,2) DN(15,1) 0   DN(16,2) DN(16,1) 0   DN(17,2) DN(17,1) 0   DN(18,2) DN(18,1) 0   DN(19,2) DN(19,1) 0   DN(20,2) DN(20,1) 0;
       0 DN(1,3) DN(1,2)   0 DN(2,3) DN(2,2)   0 DN(3,3) DN(3,2)   0 DN(4,3) DN(4,2)   0 DN(5,3) DN(5,2)   0 DN(6,3) DN(6,2)   0 DN(7,3) DN(7,2)   0 DN(8,3) DN(8,2)   0 DN(9,3) DN(9,2)   0 DN(10,3) DN(10,2)   0 DN(11,3) DN(11,2)   0 DN(12,3) DN(12,2)   0 DN(13,3) DN(13,2)   0 DN(14,3) DN(14,2)   0 DN(15,3) DN(15,2)   0 DN(16,3) DN(16,2)   0 DN(17,3) DN(17,2)   0 DN(18,3) DN(18,2)   0 DN(19,3) DN(19,2)   0 DN(20,3) DN(20,2);
       DN(1,3) 0 DN(1,1)   DN(2,3) 0 DN(2,1)   DN(3,3) 0 DN(3,1)   DN(4,3) 0 DN(4,1)   DN(5,3) 0 DN(5,1)   DN(6,3) 0 DN(6,1)   DN(7,3) 0 DN(7,1)   DN(8,3) 0 DN(8,1)   DN(9,3) 0 DN(9,1)   DN(10,3) 0 DN(10,1)   DN(11,3) 0 DN(11,1)   DN(12,3) 0 DN(12,1)   DN(13,3) 0 DN(13,1)   DN(14,3) 0 DN(14,1)   DN(15,3) 0 DN(15,1)   DN(16,3) 0 DN(16,1)   DN(17,3) 0 DN(17,1)   DN(18,3) 0 DN(18,1)   DN(19,3) 0 DN(19,1)   DN(20,3) 0 DN(20,1)];

    Ne=[N(i,1)  0  0  N(i,2)  0  0  N(i,3)  0  0  N(i,4)  0  0  N(i,5)  0  0  N(i,6)  0  0  N(i,7)  0  0  N(i,8)  0  0  N(i,9)  0  0  N(i,10)  0  0  N(i,11)  0  0  N(i,12)  0  0  N(i,13)  0  0  N(i,14)  0  0  N(i,15)  0  0  N(i,16)  0  0  N(i,17)  0  0  N(i,18)  0  0  N(i,19)  0  0  N(i,20)  0  0;
        0  N(i,1)  0  0  N(i,2)  0  0  N(i,3)  0  0  N(i,4)  0  0  N(i,5)  0  0  N(i,6)  0  0  N(i,7)  0  0  N(i,8)  0  0  N(i,9)  0  0  N(i,10)  0  0  N(i,11)  0  0  N(i,12)  0  0  N(i,13)  0  0  N(i,14)  0  0  N(i,15)  0  0  N(i,16)  0  0  N(i,17)  0  0  N(i,18)  0  0  N(i,19)  0  0  N(i,20)  0;
        0  0  N(i,1)  0  0  N(i,2)  0  0  N(i,3)  0  0  N(i,4)  0  0  N(i,5)  0  0  N(i,6)  0  0  N(i,7)  0  0  N(i,8)  0  0  N(i,9)  0  0  N(i,10)  0  0  N(i,11)  0  0  N(i,12)  0  0  N(i,13)  0  0  N(i,14)  0  0  N(i,15)  0  0  N(i,16)  0  0  N(i,17)  0  0  N(i,18)  0  0  N(i,19)  0  0  N(i,20)];

    %----------------------------------------------------------------------
    % Stiffness and mass matrices
    %----------------------------------------------------------------------

    Kl= Kl + B'*C*B*detF*wp(i,1);
    Ml= Ml + Ne'*rho*Ne*detF*wp(i,1);
    
end





